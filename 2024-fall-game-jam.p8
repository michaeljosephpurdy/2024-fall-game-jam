pico-8 cartridge // http://www.pico-8.com
version 42
__lua__
function _init()
 state='intro'
 -- setup mouse
 poke(0x5f2d, 1)
 mouse={}
 player_one=new_player(1)
 player_two=new_player(2)
 skip_button={
  x=3,
  y=106,
  w=16,
  h=8,
  draw=function(self)
   spr(9,self.x,self.y+sin(time())+.1,2,1)
  end,
 }
 cards={
 }
 mobs={
 }
 msgs={}
 player_one_hand={}
 player_two_hand={}
 player_one_card_lanes={
  new_card_lane('top',1),
  new_card_lane('mid',1),
  new_card_lane('bot',1),
 }
 player_two_card_lanes={
  new_card_lane('top',2),
  new_card_lane('mid',2),
  new_card_lane('bot',2),
 }
 card_lanes={}
 foreach(player_one_card_lanes,function(l)
  add(card_lanes,l)
 end)
 foreach(player_two_card_lanes,function(l)
  add(card_lanes,l)
 end)
 player_one_mobs={}
 player_two_mobs={}
 deck=new_deck(1)
 smokes={}
end
function new_smoke (x,y)
 return {
  x=x,
  y=y,
  dx=rnd(2)-1,
  dy=rnd(1)-1,
 }
end

function new_card_lane (t,p)
 local lane={
  head=nil,
  body=nil,
  legs=nil,
  mob=nil,
  player=p,
  id=rnd()*1000,
 }
 lane.x=2
 lane.w=45
 lane.h=20
 lane.t=t
 lane[t]=true
 if lane.player==2 then
  lane.x+=77
 end
 lane.head_x=lane.x
 lane.body_x=lane.x+16
 lane.legs_x=lane.x+32
 if t=='top' then
  lane.y=10
 elseif t=='mid' then
  lane.y=40
 elseif t=='bot' then
  lane.y=70
 end
 return lane
end
function new_mob (p,t,head,body,legs)
 local x,y=48,0
 if p==2 then
  x+=20
 end
 if t=='top' then
  y=10
 elseif t=='mid' then
  y=40
 elseif t=='bot' then
  y=60
 end
 local hp=head.hp+body.hp+legs.hp
 local atk=head.atk+body.atk+legs.atk
 return {
  x=x,
  y=y,
  head=head.s,
  body=body.s,
  legs=legs.s,
  player=p,
  t=t,
  [t]=t,
  hp=hp,
  max_hp=hp,
  atk=atk,
  id=rnd()*1000,
  draw=function(self)
   palt()
   palt(0,false)
   palt(14,true)
   local flip_h=p==2
   spr(self.head,self.x,self.y,2,2,flip_h)
   spr(self.body,self.x,self.y+16,2,2,flip_h)
   spr(self.legs,self.x,self.y+24,2,2,flip_h)
  end,
  draw_stats=function(self)
   ocprint('â™¥'..self.hp,
           self.x+4,
           self.y+16,
           8,0)
   ocprint(self.atk..'!',
           self.x+6,
           self.y+22,
           12,1)
  end,
 }
end
function new_card (x,y,t,p)
 local card={
  p=p,
  x=x,
  y=y,
  w=2*8,
  h=3*8,
  placed=false,
  turned_over=true,
  draw=function(self) 
   palt()
   if self.turned_over then
    spr(14,self.x,self.y,2,3)
    return
   end
   -- draw background
   if self.bg then
    color(self.bg)
   elseif self.p==2 then
    color(0)
   elseif self.head then
    color(13)
   elseif self.body then
    color(3)
   elseif self.legs then
    color(2)
   end
   -- draw border
   rectfill(self.x+1,self.y+1,self.x+14,self.y+22)
   spr(5,self.x,self.y,2,1)
   line(self.x,self.y+2,self.x,self.y+20,7)
   line(self.x+15,self.y+2,self.x+15,self.y+20,7)
   -- draw bottom
   spr(3,self.x,self.y+16,2,1)
   print(self.hp,self.x+5,self.y+17,1)
   print(self.atk,self.x+12,self.y+17,1)
   -- draw sprite
   palt(0,false)
   palt(14,true)
   spr(self.s,self.x,self.y,2,2)
  end,
 }
 if t=='random' then
  t=rnd(card_types)
 end
 for k,v in pairs(card_data[t]) do
  card[k]=v
 end
 return card
end
function new_deck (p)
 return {
  x=2,
  y=97,
  w=2*8,
  h=3*8,
  draw=function(self)
   spr(14,self.x-2,self.y+2,2,3)
   spr(14,self.x-1,self.y+1,2,3)
   spr(14,self.x,self.y,2,3)
  end,
  on_click=function(self)
  end,
 }
end
function new_player (num)
 return {
  num=num,
  hp=100,
 }
end
function collide (e1,e2)
 return e1.x+(e1.w or 0)>e2.x and
        e1.x<e2.x+(e2.w or 0) and
        e1.y+(e1.h or 0)>e2.y and
        e1.y<e2.y+(e2.h or 0)
end

function _update60()
 game_state_msg=nil
 hover_card=nil
 hover_lane=nil
 show_skip_button=false
 mouse.x=stat(32)
 mouse.y=stat(33)
 foreach(msgs,update)
 foreach(card_lanes,function(l)
  if collide(mouse,l) then
   hover_lane=l
  end
 end)
 if state=='intro' then
  if not co_intro then
   co_intro=cocreate(function()
    add(msgs,new_moving_msg(
     'create monsters by',4,
     64,20,
     0,-.02,
     8,2))
    add(msgs,new_moving_msg(
     'fusing their parts.',5,
     64,30,
     0,-.02,
     8,2))
    while #msgs>0 do
     yield()
    end
    add(msgs,new_moving_msg(
     'your creations will',6,
     64,60,
     0,-.02,
     8,2))
    add(msgs,new_moving_msg(
     'protect you and',7,
     64,70,
     0,-.02,
     8,2))
    add(msgs,new_moving_msg(
     'smite your enemies.',8,
     64,80,
     0,-.02,
     8,2))
    while #msgs>0 do
     yield()
    end
    add(msgs,new_moving_msg(
     'you must draw.',6,
     64,20,
     0,0,
     8,2))
    add(msgs,new_moving_msg(
     'you may cast.',8,
     64,60,
     0,0,
     8,2))
    add(msgs,new_moving_msg(
     'you must shed.',10,
     64,100,
     0,0,
     8,2))
    while #msgs>0 do
     yield()
    end
    add(msgs,new_moving_msg(
     'click to start',60,
     64,120,
     0,0,
     8,2))
    while stat(34)==0 do
     yield()
    end
   end)
  end
  coresume(co_intro)
  if costatus(co_intro)=='dead' then
   msgs={}
   state='game'
   game_state='deal_hand'
  end
 elseif state=='game' then
  foreach(cards,function(c)
   if c.target_x then
    c.x=lerp(c.x,c.target_x,1/20)
   end
   if c.target_y then
    c.y=lerp(c.y,c.target_y,1/20)
   end
   if collide(mouse,c) then
    hover_card=c
    return
   end
  end)
  if game_state=='deal_hand' then
   if #player_one_hand==0 then
    for i=0,3 do
     local card=new_card(deck.x,deck.y,'random')
     card.target_x=deck.x+i*20+20
     card.target_y=deck.y
     card.start_x=card.target_x
     card.start_y=card.y
     add(player_one_hand,card)
     add(cards,card)
    end
   end
   local done=true
   foreach(player_one_hand,function(c)
    c.done=ceil(c.x)==c.target_x
    c.turned_over=not c.done
    done=c.done and done
   end)
   if done then
    game_state='draw_one'
   end
  elseif game_state=='draw_one' then
   game_state_msg='draw a card'
   if drew_card then
    drew_card.done=ceil(drew_card.x)==drew_card.target_x
    drew_card.turned_over=not drew_card.done
    if drew_card.done then
     game_state='play_one'
     drew_card=nil
    end
   else
    local c=new_card(deck.x,deck.y,'random',1)
    add(player_one_hand,c)
    c.target_x=deck.x+(#player_one_hand-1)*20+20
    c.start_x=c.target_x
    c.start_y=c.y
    add(cards,c)
    drew_card=c
   end
  elseif game_state=='play_one' then
   show_skip_button=true
   game_state_msg='play a card'
   if click_on(skip_button) then
    game_state='discard_one'
    found_monsters=false
   end
   -- mouse down
   if stat(34)==1 then
    -- are we holding a card?
    if held_card then
     held_card.x=mid(0,mouse.x-held_offset_x,110)
     held_card.y=mid(0,mouse.y-held_offset_y,100)
    else
     -- are we picking up a card?
     foreach(player_one_hand,function(c)
      if not c.placed and
         c==hover_card then
       held_card=c
       held_offset_x=mouse.x-c.x
       held_offset_y=mouse.y-c.y
       foreach(card_lanes,function(l)
        l.valid=false
        if l.player==2 then
         return
        end
        if c.head and not l.head then
         l.valid=true
        elseif c.body and not l.body then
         l.valid=true
        elseif c.legs and not l.legs then
         l.valid=true
        end
       end)
      end
     end)
    end
   else
    local lane=nil
    foreach(card_lanes,function(l)
     if not l.valid then
      return
     end
     if not collide(mouse,l) then
      return
     end
     held_card.placed=true
     del(player_one_hand,held_card)
     if held_card.head then
      held_card.target_x=l.head_x
      l.head=held_card
     elseif held_card.body then
      held_card.target_x=l.body_x
      l.body=held_card
     elseif held_card.legs then
      held_card.target_x=l.legs_x
      l.legs=held_card
     end
     held_card.target_y=l.y
     held_card=nil
     play_cpu_card()
     -- is lane complete?
     game_state='discard_one'
     found_monsters=false
    end)
    if held_card and not lane then
     held_card.target_x=held_card.start_x
     held_card.target_y=held_card.start_y
    end
    held_card=nil
    valid_spots=nil
    foreach(card_lanes,function(l)
     l.valid=false
    end)
    spr(1,mouse.x,mouse.y)
   end
  elseif game_state=='discard_one' then
    -- make all monsters
    if not found_monsters then
     found_monsters=true
     foreach(card_lanes,function(l)
      if not (l.head and
              l.body and
              l.legs) then
       return
      end
      local mob=new_mob(
       l.player,
       l.t,
       l.head,
       l.body,
       l.legs
      )
      add(msgs,
       new_moving_msg('its alive!',1.5,
       l.legs_x,l.y+10,
       0,-0.2,
       11,2))
      -- delete the cards
      del(cards,l.head)
      del(cards,l.body)
      del(cards,l.legs)
      -- reset the lane
      l.head=nil
      l.body=nil
      l.legs=nil
      -- find any existing mob
      local existing=nil
      foreach(mobs,function(m)
       if mob.player==m.player and
          mob.t==m.t then
        existing=m
       end
      end)
      -- remove the mob
      if existing then
       del(mobs,existing)
      end
      -- add new mob
      add(mobs,mob)
      distribute_mobs()
    end)
   end
   game_state_msg='discard a card'
   if hover_card and
      not hover_card.placed and
      click_on(hover_card) then
    del(cards,hover_card)
    del(player_one_hand,hover_card)
    game_state='deal_damage'
   end  
   for i,c in pairs(player_one_hand) do
     c.target_x=deck.x+i*20
   end
  elseif game_state=='deal_damage' then
   if not routines_built then
    routines_built=true
    top_action=setup_lane_action('top')
    mid_action=setup_lane_action('mid')
    bot_action=setup_lane_action('bot')
   else
    coresume(top_action)
    coresume(mid_action)
    coresume(bot_action)
    if costatus(top_action)=='dead' and
       costatus(mid_action)=='dead' and
       costatus(bot_action)=='dead' then
     foreach(mobs,function(m)
      if m.hp<=0 then
       del(mobs,m)
      end
     end)
     distribute_mobs()
     if #player_one_hand==0 then
      game_state='deal_hand'
     else
      game_state='draw_one'
     end
     if player_one.hp<=0 then
      game_state='you_lose'
     elseif player_two.hp<=0 then
      game_state='you_win'
     end
     routines_built=false
    end
   end
  
 elseif game_state=='you_win' then
  if not game_over then
   game_over=true
   mobs={}
   cards={}
   distribute_mobs()
  end
  game_state_msg='you win!'
 elseif game_state=='you_lose' then
  if not game_over then
   game_over=true
   mobs={}
   cards={}
   distribute_mobs()
  end
  game_state_msg='you lose!'
  end
 end
end

function _draw ()
 if state=='intro' then
  cls(0)
  -- draw mouse
  if stat(34)==1 then
   spr(2,mouse.x,mouse.y)
  else
   spr(1,mouse.x,mouse.y)
  end
  foreach(msgs,draw)
 elseif state=='game' then
  cls(1)
  foreach(card_lanes,function(lane)
   if lane==hover_lane and
      lane.player==1 then
    color(7)
   elseif lane.valid then
    color(10)
   else
    color(0)
   end
   if not lane.mob then
    rect(lane.x,lane.y,lane.x+lane.w,lane.y+lane.h)
    if lane.player==2 then
     rectfill(lane.x,lane.y,lane.x+lane.w,lane.y+lane.h)
    end
   end
  end)
  deck:draw()
  if show_skip_button then
   skip_button:draw()
  end
  -- draw mobs in-order
  foreach(filter(mobs,'top'),draw)
  foreach(filter(mobs,'mid'),draw)
  foreach(filter(mobs,'bot'),draw)
  foreach(cards,draw)
  foreach(mobs,function(m)
   m:draw_stats()
  end)
  if held_card then
   rectfill(held_card.x+1,
            held_card.y+1,
            held_card.x+2*8,
            held_card.y+3*8+1,0)
   held_card:draw()
  end
  palt()
  -- draw mouse
  if stat(34)==1 then
   spr(2,mouse.x,mouse.y)
  else
   spr(1,mouse.x,mouse.y)
  end
  if game_state_msg then
   ocprint(game_state_msg,64,
          sin(time())+.1+3,10,2)
  end
  if hover_card and
     not hover_card.turned_over and
     not held_card then
   ocprint(hover_card.name,64,122,10,0)
  end
  if held_card then
   cprint(held_card.name,64,120,10)
  end
  ocprint('p1 â™¥'..player_one.hp,17,2,8,0)
  ocprint('p2 â™¥'..player_two.hp,107,2,8,0)
  foreach(msgs,draw)
 end
end

function cprint(msg,x,y,c)
 print(msg,x-#msg*2,y,c)
end
function ocprint(msg,x,y,c,oc)
 cprint(msg,x-1,y-1,oc)
 cprint(msg,x-1,y,oc)
 cprint(msg,x-1,y+1,oc)
 cprint(msg,x,  y-1,oc)
 cprint(msg,x,  y,oc)
 cprint(msg,x,  y+1,oc)
 cprint(msg,x+1,y-1,oc)
 cprint(msg,x+1,y,oc)
 cprint(msg,x+1,y+1,oc)
 cprint(msg,x,y,c)
end

function lerp(a,b,t)
 return a+(b-a)*t
end

function click_on(obj)
 return stat(34)==1 and
        collide(mouse,obj)
end

function filter (tbl,arg)
 local fn=arg
 if type(arg)=='string' then
  fn=function(i)
   return i[arg]
  end
 end
 local res={}
 foreach(tbl,function(item)
  if fn(item) then
   add(res,item)
  end
 end)
 return res
end

function play_cpu_card ()
 local c=new_card(0,-30,'random',2)
 c.turned_over=false
 local found=nil
 local checked={}
 while true do
  -- get a random lane
  local l=rnd(player_two_card_lanes)
  -- if the card can fit in lane
  -- use it
  if c.head and not l.head then
   found=l
   break
  end
  if c.body and not l.body then
   found=l
   break
  end
  if c.legs and not l.legs then
   found=l
   break
  end
  -- if we can't fit in that lane
  -- then don't check this lane
  -- again
  add(checked,l)
  -- if we've checked all lanes
  -- then stop looking
  if #checked==#player_two_card_lanes then
   break
  end
 end
 if found then
  c.target_y=found.y
  if c.head then
   c.target_x=found.head_x
   found.head=c
  elseif c.body then
   c.target_x=found.body_x
   found.body=c
  elseif c.legs then
   c.target_x=found.legs_x
   found.legs=c
  end
  add(cards,c)
 end
end

function contains(tbl,key)
 for k,_ in pairs(tbl) do
  if key==k then
   return true
  end
 end
 return false
end

function setup_lane_action (lane_type)
 local empty_coroutine=cocreate(function()
 end)
 local player_one_mob=nil
 local player_two_mob=nil
 foreach(player_one_mobs,function(m)
  if m.t==lane_type then
   player_one_mob=m
  end
 end)
 foreach(player_two_mobs,function(m)
  if m.t==lane_type then
   player_two_mob=m
  end
 end)
 if not player_one_mob and
    not player_two_mob then
  return empty_coroutine
 end
 local pre_atk_func=function()
  printh('pre-atk')
 end
 local atk_func=function()
  printh('atk')
 end
 local post_atk_func=function()
  printh('post-atk')
 end
 if player_one_mob and
    player_two_mob then
  atk_func=function()
   printh('atk both')
   local p1_atk=player_one_mob.atk
   local p2_atk=player_two_mob.atk
   player_two_mob.hp-=p1_atk
   player_one_mob.hp-=p2_atk
  end
 elseif player_one_mob then
  atk_func=function()
   printh('atk p2')
   local p1_atk=player_one_mob.atk
   player_two.hp-=p1_atk
  end
 elseif player_two_mob then
  atk_func=function()
   printh('atk p1')
   local p2_atk=player_two_mob.atk
   player_one.hp-=p2_atk
  end
 end
 return cocreate(function()
  atk_func()
  --pre_atk_func()
  --yield()
  --yield()
  --post_atk_func()
 end)
end

function draw(e)
 e:draw()
end
function update(e)
 e:update()
end

function distribute_mobs ()
 player_one_mobs={}
 player_two_mobs={}
 foreach(mobs,function(m)
  if m.player==1 then
   add(player_one_mobs,m)
  else
   add(player_two_mobs,m)
  end
 end)
end

function new_moving_msg (msg,ttl,x,y,dx,dy,c,oc)
 return {
  msg=msg,
  ttl=ttl,
  x=x,
  y=y,
  dx=dx,
  dy=dy,
  c=c,
  oc=oc,
  update=function(self)
   self.x+=self.dx
   self.y+=self.dy
   self.ttl-=1/60
   if self.ttl<0 then
    del(msgs,self)
   end
  end,
  draw=function(self)
   ocprint(self.msg,self.x,self.y,self.c,self.oc)
  end,
 }
end
-->8
card_data={
 frank_head={
  name='frankenstein - head',
  s=16,
  hp=4,
  atk=1,
  head=true,
 },
 frank_body={
  name='frankenstein - body',
  s=18,
  hp=5,
  atk=2,
  body=true,
 },
 frank_legs={
  name='frankenstein - legs',
  s=20,
  hp=4,
  atk=3,
  legs=true,
 },
 drac_head={
  name='dracula - head',
  s=22,
  hp=3,
  atk=3,
  head=true,
 },
 drac_body={
  name='dracula - body',
  s=24,
  hp=3,
  atk=2,
  body=true,
 },
 drac_legs={
  name='dracula - legs',
  s=26,
  hp=2,
  atk=0,
  legs=true,
 },
 wolf_head={
 	name='werewolf - head',
 	s=76,
 	hp=3,
 	atk=2,
 	head=true,
	},
	wolf_body={
 	name='werewolf - body',
 	s=78,
 	hp=4,
 	atk=3,
 	body=true,
	},
	wolf_legs={
 	name='werewolf - legs',
 	s=110,
 	hp=3,
 	atk=2,
 	legs=true,
	},
	pump_head={
 	name='pumpkin - head',
 	s=96,
 	hp=2,
 	atk=3,
 	head=true,
	},
		pump_body={
 	name='pumpkin - body',
 	s=86,
 	hp=1,
 	atk=4,
 	body=true,
	},
		pump_legs={
 	name='pumpkin - legs',
 	s=100,
 	hp=1,
 	atk=3,
 	legs=true,
	}
}
card_types={}
for k,v in pairs(card_data) do
 add(card_types,k)
end
__gfx__
00000000010000000000000077777777777777770077777777777700700000000000000700666666666666600000000000000000000000000066666666666600
000000001c10000001000000780800000060000707000000000000707000000000000007065575777777777600000000000000000000000006ddddd121dddd60
007007001cc100001c10000078880000006000077000000000000007700000000000000765777577757555760000000000000000000000006dd1111121111dd6
000770001ccc10001cc1000078880000006000077000000000000007700000000000000765557575777575760000000000000000000000006d111111211111d6
000770001cccc1001ccc100078880000055500077000000000000007700000000000000767757557757555760000000000000000000000006d111112118111d6
007007001cc111001cccc10070800000004000077000000000000007700000000000000765577575757577760000000000000000000000006d111112118111d6
00000000511555001cc1110007000000000000707000000000000007700000000000000767777777777577600000000000000000000000006d111121111811d6
00000000055000000110000000777777777777007000000000000007700000000000000706666666666666000000000000000000000000006d111211111811d6
eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee00000000000000006d112111111811d6
eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee000000eeeeeeeeeeeeeeeeeeeeee00000000000000006d112111118111d6
eeeeee33333eeeeeeeeeeeebbeeeeeeeeeeee111111eeeeeeeeeeeeeeeeeeeeeeeeee0000eeeeeeeeeeeee00000eeeee00000000000000006d111211181111d6
eeeee333333eeeeeeeeeee7777eeeeeeeeeee111111eeeeeeeeeee00000eeeeeeeeeee0000eeeeeeeeeee000000eeeee00000000000000006d111118811111d6
eeee3333333eeeeeeeeeebbb77eeeeeeeeeee111111eeeeeeeeee000000eeeeeeeeeee0000eeeeeeeeeee000000eeeee00000000000000006d111181111111d6
eeee3333bbbeeeeeeeeebbbb77eeeeeeeeeee111111eeeeeeeeee000000eeeeeeeeee00000eeeeeeeeeee000000eeeee00000000000000006d111811112111d6
eeee33b3b7beeeeeeeeebbb777eeeeeeeeeee111111eeeeeeeee0007777eeeeeeeeee00000eeeeeeeeeee000000eeeee00000000000000006d118111111211d6
eeee33bbb1beeeeeeeeebbb777eeeeeeeeeee111c11eeeeeeeee7007767eeeeeeeee000000eeeeeeeeeeee00000eeeee00000000000000006d118111111211d6
eeee3bbbb1beeeeeeeeebbb777eeeeeeeeeee111c11eeeeeeeee7077707eeeeeeeee000100eeeeeeeeeeee0000eeeeee00000000000000006d118111112111d6
eeeeebbbbbbeeeeeeeeebbb777eeeeeeeeeee111c11eeeeeeeee7777707eeeeeeeee000100eeeeeeeeeeee0000eeeeee00000000000000006d111811121111d6
eee55bbbbbbeeeeeeeeebbb777eeeeeeeeeee111c11eeeeeeeee0777777eeeeeeeee000100eeeeeeeeeeee00000eeeee00000000000000006d111811211111d6
eee5566bb44eeeeeeeeeebb7bbbeeeeeeeeee111c11eeeeeeeee0077777eeeeeeeeee00100eeeeeeeeeeee00000eeeee00000000000000006d111111211111d6
eee5566bbbbeeeeeeeeeebbbbbbeeeeeeeeee111c11eeeeeeeeee077788eeeeeeeeee00700eeeeeeeeeeee00000eeeee00000000000000006d111112111111d6
eee55bbbbbbeeeeeeeeeeebbbbbeeeeeeeeee11441444eeeeeeeee77777eeeeeeeeee70700eeeeeeeeeeee00000eeeee00000000000000006dd1111211111dd6
eeeeeeebbbeeeeeeeeeeee7777eeeeeeeeeee444441444eeeeeeeee77eeeeeeeeeeee77700eeeeeeeeeeee011011eeee000000000000000006dddd121ddddd60
eeeeeeebbbeeeeeeeeeeee7777eeeeeeeeeee444441444eeeeeeeee77eeeeeeeeeeeee000eeeeeeeeeeeee111011eeee00000000000000000066666666666600
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
88888888888888888888888888888888888222277222288844444444444444444444444444444444444111144111144411141111111141111111111111111111
88888800008888888888800000088888888000000000088844000000000000444441111555114444444111144111144411404144441404111111444444441111
8888000000008888888009000090088888800000000008884000000b0b0000044111111555111114444111144111144411404444444404111144444444444411
88800000000008888800a077770a00888880000000000888400b0b0bbb0b00041111115555111111444111144111144414444444444444411444444444444441
880000000000008880aa08877880aa088880500880050888400bbbbbbbbbb00411111155551111114441111441111444144444444444444144fff444444fff44
f80000000000008f0550082882800550888050088005088840bbbbbbbbbbbb041111100555111111444111144111144414444444444444414ffffff44ffffff4
f000ff0000ff000f05500882288005508880500880050888b0bbbbbbbbbbbb0b1110115555110111444111144111144414449944449944414ffffffffffffff4
f00ffff00ffff00f05500087780005508880500880050888b3bb33333333bb3b1110115555110111444111144111144414444994499444414ffffffffffffff4
f00f00ffff00f00f055000777700055088805008800508884b3b300bb003b3b41110100555110111444111144111144414444444444444414ffffffffffffff4
80ff780ff087ff0805500077770005508880500880050888443bb00bb00bb34411101155551101114441111441111444144444400444444144ffffffffffff44
88ff788ff887ff8805550077770055508880500880050888444bbbbbbbbbb44411101155551101114441111441111444114444444444441144ffffffffffff44
88ffffffffffff8805557077770755508880500880050888444bbbbbbbbbb444111010055511011144411114411114441144407447044411144ffffffffff441
888ff07ff70ff88805555777777555508887000880007888444bbb2222bbb4441110115555110111455001144110055411144007700441111144ffffffff4411
8888f070070f8888805555777755550880007778877700084464bb2222bb46444441115555111444500500044000500511144700007441111144ffffffff4411
88888f0000f888888800555555550088000000088000000044665b2bb2b5664444411155551114440000000440000000111144777744111111144ffffff44111
888888ffff8888888888000000008888000000088000000044644bbbbbb44644444111555511144400000004400000001111144444411111111144ffff441111
dddddddd44ddddddddddddddddddddddddddd445444ddddd00000000000000000000000000000000000000000000000000000000000000001144444114444411
ddddddd444ddddddddd5d44d454ddddddddd44544444dddd00000000000000000000000000000000000000000000000000000000000000001444441111444441
dd9999d44d9999dddd544444554ddddddddd554ddd44dddd00000000000000000000000000000000000000000000000000000000000000001444411111144441
d99999944999999ddd44d44445454dddddd544dddd444ddd00000000000000000000000000000000000000000000000000000000000000004444111111114444
9999999999999999dd45d404445454dddddd44ddddd44ddd00000000000000000000000000000000000000000000000000000000000000004444111111114444
9999999999999999d45dd440404d544dddddd445ddd44ddd00000000000000000000000000000000000000000000000000000000000000004444411111144444
9999a999999a9999d5dddd40004d5d4ddddd4445ddd44ddd00000000000000000000000000000000000000000000000000000000000000001444441111444441
999aaa9999aaa99954dddd4404dddd4dddddd45dddd44ddd00000000000000000000000000000000000000000000000000000000000000001114444114444111
999aaaa99aaaa999d45ddd4004dddd4dddddd54dddd44ddd00000000000000000000000000000000000000000000000000000000000000001111444114441111
9999aa9999aa9999d45ddd0404dddd4ddddd54dddd44dddd00000000000000000000000000000000000000000000000000000000000000001111444114441111
9999999999999999d544dd44454dd4d4dddd54dddd44dddd00000000000000000000000000000000000000000000000000000000000000001111444114441111
999aaa999999aa99d45d4d44544dd4d4dddd44dddd4ddddd00000000000000000000000000000000000000000000000000000000000000001114441111444111
d9a9aaa9a9aaa99dd4d5dd45454d4d4dd4ddd44ddd4ddddd00000000000000000000000000000000000000000000000000000000000000001114441111444111
d9999aaaaaaa999dddd5d44544dddddd4d4dd44ddd44dd4d00000000000000000000000000000000000000000000000000000000000000001144411111144411
dd9999a9aa9a99dddd5dd44544dddddd4ddd44ddddd44dd400000000000000000000000000000000000000000000000000000000000000001444411111144441
dddd99999999ddddddddd4544dddddddd4444dddddd4444d00000000000000000000000000000000000000000000000000000000000000000404111111114040
__label__
aaa1aaa11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111aaa1aaa1
11a1a1a11111111111111111111111111111111111aa11aaa1aaa1a1a11111aaa111111aa1aaa1aaa1aa11111111111111111111111111111111111111a1a1a1
aaa1a1a11111111111111111111111111111111111a1a1a1a1a1a1a1a11111a1a11111a111a1a1a1a1a1a11111111111111111111111111111111111aaa1a1a1
a111a1a11111111111111111111111111111111111a1a1aa11aaa1a1a11111aaa11111a111aaa1aa11a1a11111111111111111111111111111111111a111a1a1
aaa1aaa11111111111111111111111111111111111a1a1a1a1a1a1aaa11111a1a11111a111a1a1a1a1a1a11111111111111111111111111111111111aaa1aaa1
111111111111111111111111111111111111111111aaa1a1a1a1a1aaa11111a1a111111aa1a1a1a1a1aaa1111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
1111111111aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
1111111111aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
1111111111aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111a11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111a111111111111111111111111111
1111111111aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11116666666666661111111777777777777111111117777777777771111111177777777777711111111777777777777111111111111111111111111111111111
1116ddddd121dddd6111117222222222222711111173333333333337111111722222222222271111117dddddddddddd711111111111111111111111111111111
116dd1111121111dd6111722227777772222711117333333bb33333371111722227777772222711117dddddddddddddd71111111111111111111111111111111
166d111111211111d61117222211111122227111173333377773333371111722221111112222711117ddddd00000dddd71111111111111111111111111111111
666d111112118111d61117222211111122227111173333bbb773333371111722221111112222711117dddd000000dddd71111111111111111111111111111111
666d111112118111d6111722221111112222711117333bbbb773333371111722221111112222711117dddd000000dddd71111111111111111111111111111111
666d111121111811d6111722221111112222711117333bbb7773333371111722221111112222711117ddd0007777dddd71111111111111111111111111111111
666d111211111811d611172222111c112222711117333bbb777333337111172222111c112222711117ddd7007767dddd71111111111111111111111111111111
666d112111111811d611172222111c112222711117333bbb777333337111172222111c112222711117ddd7077707dddd71111111111111111111111111111111
666d112111118111d611172222111c112222711117333bbb777333337111172222111c112222711117ddd7777707dddd71111111111111111111111111111111
666d111211181111d611172222111c112222711117333bbb777333337111172222111c112222711117ddd0777777dddd71111111111111111111111111111111
666d111118811111d611172222111c1122227111173333bb7bbb33337111172222111c112222711117ddd0077777dddd711111111111111111c1111111111111
666d111181111111d611172222111c1122227111173333bbbbbb33337111172222111c112222711117dddd077788dddd711111111111111111cc111111111111
666d111811112111d611172222114414442271111733333bbbbb333371111722221144144422711117ddddd77777dddd711111111111111111ccc11111111111
666d118111111211d61117222244444144427111173333377773333371111722224444414442711117dddddd77dddddd711111111111111111cccc1111111111
666d118111111211d61117222244444144427111173333377773333371111722224444414442711117dddddd77dddddd711111111111111111cc111111111111
666d118111112111d611177777777777777771111777777777777777711117777777777777777111177777777777777771111111111111111511555111111111
666d111811121111d611178282111226211171111783831113363111711117828211122621117111178d8d111dd6d11171111111111111111155111111111111
666d111811211111d61117888222122622217111178883331336333171111788822212262221711117888d1dddd6d1dd71111111111111111111111111111111
666d111111211111d61117888211122621117111178883111336311171111788821112262111711117888d111dd6d11171111111111111111111111111111111
666d111112111111d61117888212225551227111178883133355513371111788821222555122711117888ddd1d555dd171111111111111111111111111111111
666dd1111211111dd61117282211122421117111173833111334311171111728221112242111711117d8dd111dd4d11171111111111111111111111111111111
66d6dddd121ddddd6111117222222222222711111173333333333337111111722222222222271111117dddddddddddd711111111111111111111111111111111
6d6d6666666666661111111777777777777111111117777777777771111111177777777777711111111777777777777111111111111111111111111111111111
16d66666666666611111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11666666666666111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111
11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111

__sfx__
000100000000000000000000000000000110501405016050170501b0501e0502005022050240502505027050290502c0502e05000000000000000000000000000000000000000000000000000000000000000000
